@model FamilyAccounting.Web.Models.WalletViewModel

@{
    ViewData["Title"] = "Details";
    var pagedList = (IPagedList)ViewBag.OnePageOfTransactions;
}
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Mvc.Core.Common;
<h1>Details</h1>

<div class="container">
    <div class="row">
        <div>
            <hr />
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Description)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Description)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Balance)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Balance)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Expense)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Expense)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Income)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Income)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.IsCash)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.IsCash)
                </dd>
            </dl>
        </div>
        <div>
            <a asp-controller="Transaction" asp-action="MakeIncome" asp-route-id="@Model.Id">Make income</a> |
            <a asp-controller="Transaction" asp-action="MakeExpense" asp-route-id="@Model.Id">Make expense</a> |
            <a asp-controller="Transaction" asp-action="MakeTransfer" asp-route-id="@Model.Id">Make transfer</a> |
            <a asp-controller="Transaction" asp-action="SetInitialBalance" asp-route-id="@Model.Id">Set initial balance</a> |
            <a asp-controller="Wallet" asp-action="Update" asp-route-id=@Model.Id>Update</a> |
            <a asp-controller="Wallet" asp-action="Delete" asp-route-id=@Model.Id>Delete</a> |
            @if (!Model.IsCash)
            {<a asp-controller="Card" asp-action="Create" asp-route-id=@Model.Id>Add card</a>}
            else
            { <a asp-controller="Card" asp-action="Details" asp-route-id=@Model.Id>See card</a>
            }
            | <a asp-controller="Person" asp-action="Details" asp-route-id=@Model.PersonId>Back to Person</a>
        </div>
    </div>
    <div class="col-sm">
    </div>
    <div style="margin-top: 50px">
        <h3>List of transactions</h3>
        <form asp-action="Detail">
            <div class="d-flex justify-content-end" style="margin-bottom:20px">
                <input type="date" id="from" name="from" class="form-control" style="margin-right:20px; width:300px;" />
                <input type="date" id="to" name="to" class="form-control" style="margin-right:20px; width:300px;" />
                <input style="display:none" type="number" id="id" name="id" class="form-control" value="@Model.Id" />
                <input type=submit value="Apply filter" class="btn btn-success" style="margin-right:20px;" />
            </div>
        </form>

        <table style="text-align:center" class="table">
            <thead>
                <tr>
                    <th>Amount</th>
                    <th style="background-color:ghostwhite">Before</th>
                    <th>After</th>
                    <th style="background-color:ghostwhite">Category</th>
                    <th>Date</th>
                    <th style="background-color:ghostwhite">Description</th>
                    <th>Type</th>
                    <th>Details</th>
                </tr>
            </thead>
            <tbody>
                @{ var rowColor = "white"; }
                @foreach (var item in ViewBag.OnePageOfTransactions)
                {
                    if (@item.State)
                    {
                        rowColor = "#6a9510";
                    }
                    else
                    {
                        rowColor = "#d45057";
                    }
                    <tr style="color:@rowColor;">
                        <td style="text-align:right">
                            @item.Amount
                        </td>
                        <td style="text-align:right;background-color:ghostwhite">
                            @item.BalanceBefore
                        </td>
                        <td style="text-align:right; color:@(item.BalanceAfter < item.BalanceBefore ? "#801e28" : @rowColor)">
                            @item.BalanceAfter
                        </td>
                        <td style="text-align:left;background-color:ghostwhite">
                            @item.Category
                        </td>
                        <td>
                            @item.TimeStamp
                        </td>
                        <td style="text-align:left;background-color:ghostwhite">
                            @item.Description
                        </td>
                        <td>
                            @item.TransactionType
                        </td>
                        <td>
                            <a asp-controller="Transaction" asp-action="Details" asp-route-walletId=@Model.Id asp-route-transactionId=@item.Id class="btn btn-outline-dark">&#128065</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @Html.PagedListPager((IPagedList)ViewBag.OnePageOfTransactions, page => Url.Action("Details", new { page }), new PagedListRenderOptions
                {
                    LiElementClasses = new string[] { "page-item" },
                    PageClasses = new string[] { "page-link" }
                })
    </div>
</div>



